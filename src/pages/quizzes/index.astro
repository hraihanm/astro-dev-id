---
import Layout from '../../components/Layout.astro';

export const prerender = false;

// Fetch standalone quizzes from API
let quizzes: any[] = [];
try {
  const response = await fetch(`${import.meta.env.PUBLIC_SITE_URL || 'http://localhost:4321'}/api/quiz/standalone`);
  if (response.ok) {
    const data = await response.json();
    quizzes = data.quizzes || [];
  }
} catch (error) {
  console.error('Error fetching quizzes:', error);
}
---

<Layout title="Practice Quizzes">
  <div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <div class="bg-white shadow mb-8">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
          <div class="flex items-center">
            <h1 class="text-2xl font-bold text-gray-900">Practice Quizzes</h1>
          </div>
          <div class="flex items-center space-x-4">
            <a href="/" class="text-gray-700 hover:text-blue-600">Home</a>
            <a href="/courses" class="text-gray-700 hover:text-blue-600">Courses</a>
          </div>
        </div>
      </div>
    </div>

    <!-- Quizzes Grid -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <p class="text-gray-600 mb-6">
        Try out these practice quizzes to test your knowledge. No course enrollment required!
      </p>

      {quizzes.length === 0 ? (
        <div class="bg-white rounded-lg shadow p-8 text-center">
          <div class="text-gray-400 text-6xl mb-4">üìù</div>
          <h3 class="text-xl font-semibold text-gray-900 mb-2">No Quizzes Available</h3>
          <p class="text-gray-600">Check back later for practice quizzes!</p>
        </div>
      ) : (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {quizzes.map((quiz) => {
            const questionCount = Array.isArray(quiz.questions) ? quiz.questions.length : 0;
            const settings = quiz.settings || {};
            const description = settings.description || '';
            const timeLimit = settings.timeLimit || 0;
            const minutes = Math.floor(timeLimit / 60);
            
            return (
              <a
                href={`/quizzes/${quiz.id}`}
                class="bg-white rounded-lg shadow hover:shadow-lg transition-shadow p-6 block"
              >
                <div class="flex items-start justify-between mb-4">
                  <div class="flex-1">
                    <h3 class="text-lg font-semibold text-gray-900 mb-2">{quiz.title}</h3>
                    {description && (
                      <p class="text-sm text-gray-600 mb-3">{description}</p>
                    )}
                  </div>
                </div>
                
                <div class="flex items-center justify-between text-sm text-gray-500">
                  <div class="flex items-center space-x-4">
                    <span>{questionCount} questions</span>
                    {minutes > 0 && <span>{minutes} min</span>}
                  </div>
                  <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded text-xs font-medium">
                    Practice
                  </span>
                </div>
              </a>
            );
          })}
        </div>
      )}
    </div>
  </div>
</Layout>

