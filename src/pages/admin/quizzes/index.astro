---
export const prerender = false;

import Layout from '../../../components/Layout.astro';
import { getAllQuizzes } from '../../../lib/quizzes';

const allQuizzes = await getAllQuizzes();
const standaloneQuizzes = allQuizzes.filter(q => q.courseId === null);
const courseQuizzes = allQuizzes.filter(q => q.courseId !== null);
---

<Layout title="Quiz Management - Admin">
  <div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <div class="bg-white shadow mb-8">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
          <div class="flex items-center">
            <h1 class="text-2xl font-bold text-gray-900">Manajemen Kuis</h1>
          </div>
          <div class="flex items-center space-x-4">
            <a href="/admin/quizzes/new" class="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700">
              Buat Kuis Mandiri
            </a>
            <a href="/admin" class="text-gray-700 hover:text-blue-600">Kembali ke Dashboard</a>
          </div>
        </div>
      </div>
    </div>

    <!-- Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      
      <!-- Standalone Quizzes Section -->
      <div class="mb-8">
        <div class="flex items-center justify-between mb-4">
          <h2 class="text-xl font-semibold text-gray-900">Kuis Latihan Mandiri</h2>
          <span class="text-sm text-gray-500">{standaloneQuizzes.length} quizzes</span>
        </div>

        {standaloneQuizzes.length === 0 ? (
          <div class="bg-white rounded-lg shadow p-8 text-center">
            <div class="text-gray-400 text-6xl mb-4">üìù</div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Belum Ada Kuis Mandiri</h3>
            <p class="text-gray-600 mb-4">Buat kuis latihan yang dapat dicoba siswa tanpa mendaftar kursus.</p>
            <a href="/admin/quizzes/new" class="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 inline-block">
              Buat Kuis Pertama
            </a>
          </div>
        ) : (
          <div class="bg-white rounded-lg shadow">
            <ul class="divide-y divide-gray-200">
              {standaloneQuizzes.map((quiz) => {
                const questions = JSON.parse(quiz.questions);
                const settings = quiz.settings ? JSON.parse(quiz.settings) : {};
                
                return (
                  <li class="hover:bg-gray-50">
                    <a href={`/admin/quizzes/${quiz.id}/edit`} class="block px-6 py-4">
                      <div class="flex items-center justify-between">
                        <div class="flex-1">
                          <div class="flex items-center space-x-3">
                            <h3 class="text-lg font-medium text-gray-900">{quiz.title}</h3>
                            <span class="bg-green-100 text-green-800 px-2 py-1 rounded text-xs font-medium">
                              Latihan
                            </span>
                          </div>
                          {settings.description && (
                            <p class="text-sm text-gray-600 mt-1">{settings.description}</p>
                          )}
                          <div class="flex items-center space-x-4 mt-2 text-sm text-gray-500">
                            <span>{questions.length} pertanyaan</span>
                            {settings.timeLimit && (
                              <span>{Math.floor(settings.timeLimit / 60)} menit</span>
                            )}
                            {settings.maxAttempts && (
                              <span>Maks {settings.maxAttempts} percobaan</span>
                            )}
                          </div>
                        </div>
                        <div class="flex items-center space-x-2 ml-4">
                          <span class="text-sm text-gray-400">
                            Dibuat {new Date(quiz.createdAt).toLocaleDateString()}
                          </span>
                          <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                    </a>
                  </li>
                );
              })}
            </ul>
          </div>
        )}
      </div>

      <!-- Course Quizzes Section -->
      {courseQuizzes.length > 0 && (
        <div class="mb-8">
          <div class="flex items-center justify-between mb-4">
            <h2 class="text-xl font-semibold text-gray-900">Kuis Kursus</h2>
            <span class="text-sm text-gray-500">{courseQuizzes.length} quizzes</span>
          </div>

          <div class="bg-white rounded-lg shadow">
            <ul class="divide-y divide-gray-200">
              {courseQuizzes.map((quiz) => {
                const questions = JSON.parse(quiz.questions);
                const settings = quiz.settings ? JSON.parse(quiz.settings) : {};
                
                return (
                  <li class="hover:bg-gray-50">
                    <a href={`/admin/courses/${quiz.courseId}/edit`} class="block px-6 py-4">
                      <div class="flex items-center justify-between">
                        <div class="flex-1">
                          <div class="flex items-center space-x-3">
                            <h3 class="text-lg font-medium text-gray-900">{quiz.title}</h3>
                            <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded text-xs font-medium">
                              Kursus
                            </span>
                          </div>
                          {quiz.course && (
                            <p class="text-sm text-gray-600 mt-1">
                              Kursus: {quiz.course.title}
                            </p>
                          )}
                          <div class="flex items-center space-x-4 mt-2 text-sm text-gray-500">
                            <span>{questions.length} pertanyaan</span>
                            {settings.timeLimit && (
                              <span>{Math.floor(settings.timeLimit / 60)} menit</span>
                            )}
                          </div>
                        </div>
                        <div class="flex items-center space-x-2 ml-4">
                          <span class="text-sm text-gray-400">
                            Dibuat {new Date(quiz.createdAt).toLocaleDateString()}
                          </span>
                          <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                    </a>
                  </li>
                );
              })}
            </ul>
          </div>
        </div>
      )}
    </div>
  </div>
</Layout>

